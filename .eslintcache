[{"/home/global/react/todo-frontend/src/index.js":"1","/home/global/react/todo-frontend/src/reportWebVitals.js":"2","/home/global/react/todo-frontend/src/Components/Todo.js":"3","/home/global/react/todo-frontend/src/Components/Item.js":"4"},{"size":507,"mtime":1612192683000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1612191981969,"results":"7","hashOfConfig":"6"},{"size":2988,"mtime":1612195719000,"results":"8","hashOfConfig":"6"},{"size":1989,"mtime":1612195653000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"6lbbxa",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/global/react/todo-frontend/src/index.js",[],["20","21"],"/home/global/react/todo-frontend/src/reportWebVitals.js",[],"/home/global/react/todo-frontend/src/Components/Todo.js",["22","23"],"import React, { useState, useEffect } from 'react'\nimport { Container, Button, TextField, List } from '@material-ui/core'\n\nimport Item from './Item'\n\nimport '../Styles/Todo.css'\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([])\n  const [todo, setTodo] = useState('')\n\n  const fetchData = React.useCallback(() => {\n    fetch(`http://localhost:5000/apis/todos`, {\n      method: 'GET',\n      headers: new Headers({\n        Accept: 'application/json'\n      })\n    })\n      .then(res => res.json())\n      .then(response => {\n        setTodos(response.todos)\n      })\n      .catch(error => console.log(error))\n  }, [])\n\n  React.useEffect(\n    () => {\n      fetchData()\n    },\n    [fetchData]\n  )\n\n  const handleChange = e => {\n    setTodo(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (todo === '') {\n      return\n    }\n    let todoObject = {\n      title: todo\n    }\n    fetch(`http://localhost:5000/apis/todos`, {\n      method: 'Post',\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(todoObject)\n    })\n      .then(res => res.json())\n      .then(response => {\n        todoObject._id = setTodos([...todos, todoObject])\n        setTodo('')\n      })\n      .catch(error => console.log(error))\n  }\n\n  const deleteTodo = _id => {\n    fetch(`http://localhost:5000/apis/todos/${_id}`, {\n      method: 'Delete',\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      })\n    })\n      .then(res => res.json())\n      .then(response => {\n        setTodos(todos.filter(t => t._id != _id))\n      })\n      .catch(error => console.log(error))\n  }\n\n  return (\n    <Container maxWidth='sm'>\n      {' '}\n      <div>\n        {' '}\n        <h3>Task Management </h3>{' '}\n        <div>\n          {' '}\n          <form onSubmit={handleSubmit}>\n            <label>\n              <TextField\n                id='standard-basic'\n                label='Add a task ...'\n                value={todo}\n                name='todo'\n                onChange={handleChange}\n              />{' '}\n            </label>{' '}\n            <Button variant='contained' color='primary' type='Submit'>\n              Submit\n            </Button>\n          </form>{' '}\n        </div>{' '}\n        <div>\n          {' '}\n          {todos.length > 0 ? (\n            <List>\n              <h3> Todo list </h3>{' '}\n              {todos.map(todoItem => {\n                return (\n                  <Item\n                    todoItem={todoItem}\n                    deleteTodo={deleteTodo}\n                    setTodos={setTodos}\n                    todos={todos}\n                    key={todoItem._id}\n                  />\n                )\n              })}{' '}\n            </List>\n          ) : (\n            <div> You have no todos </div>\n          )}{' '}\n        </div>{' '}\n      </div>{' '}\n    </Container>\n  )\n}\n\nexport default Todo\n","/home/global/react/todo-frontend/src/Components/Item.js",["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":27,"nodeType":"32","messageId":"33","endLine":1,"endColumn":36},{"ruleId":"34","severity":1,"message":"35","line":71,"column":42,"nodeType":"36","messageId":"37","endLine":71,"endColumn":44},{"ruleId":"30","severity":1,"message":"38","line":3,"column":3,"nodeType":"32","messageId":"33","endLine":3,"endColumn":7},{"ruleId":"30","severity":1,"message":"39","line":5,"column":3,"nodeType":"32","messageId":"33","endLine":5,"endColumn":12},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'List' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]